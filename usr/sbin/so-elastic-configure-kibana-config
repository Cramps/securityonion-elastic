#!/bin/bash

. /usr/sbin/so-elastic-common

. /etc/nsm/securityonion.conf

header "Configuring Kibana"
max_wait=240
#kibana_build=$(jq -r '.build.number' < /opt/kibana/package.json )
while getopts ":hr" OPTION
do
     case $OPTION in
         r)	# Upgrading instead of first run
                REAPPLY_CONFIG=1
             ;;
     esac
done
if [ "$REAPPLY_CONFIG" = 1 ];then

	# We are only upgrading, so we only need to update the configuration for the latest version
	echo
	echo "Applying configuration for current version..."
	echo
	curl -s -XDELETE http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/${KIBANA_INDEX}/config/${KIBANA_VERSION}
        curl -XPUT http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/_template/kibana -d'{"template" : ".kibana", "settings": { "number_of_shards" : 1, "number_of_replicas" : 0 }, "mappings" : { "search": {"properties": {"hits": {"type": "integer"}, "version": {"type": "integer"}}}}}'
        curl -XPUT http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/${KIBANA_INDEX}/config/${KIBANA_VERSION} -d@$REPO/kibana/config.json
	echo
else

	# Check to see if server is available
	until curl -s -XGET http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/_cluster/health > /dev/null ; do
		wait_step=$(( ${wait_step} + 1 ))
		if [ ${wait_step} -gt ${max_wait} ]; then
			echo "ERROR: elasticsearch server not available for more than ${max_wait} seconds."
			exit 5
		fi
		sleep 1s;
	done

	# Apply config and template
	curl -s -XDELETE http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/${KIBANA_INDEX}/config/${KIBANA_VERSION}
	curl -s -XDELETE http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/${KIBANA_INDEX}
	curl -XPUT http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/_template/kibana -d'{"template" : ".kibana", "settings": { "number_of_shards" : 1, "number_of_replicas" : 0 }, "mappings" : { "search": {"properties": {"hits": {"type": "integer"}, "version": {"type": "integer"}}}}}'
	curl -XPUT http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/${KIBANA_INDEX}/config/${KIBANA_VERSION} -d@$REPO/kibana/config.json; echo; echo
fi
