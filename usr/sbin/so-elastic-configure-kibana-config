#!/bin/bash

. /usr/sbin/so-elastic-common

. /etc/nsm/securityonion.conf

header "Configuring Kibana"
MAX_WAIT=240

# Check to see if server is available
until curl -s -XGET http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/_cluster/health > /dev/null ; do
	wait_step=$(( ${wait_step} + 1 ))
	if [ ${wait_step} -gt ${MAX_WAIT} ]; then
		echo "ERROR: elasticsearch server not available for more than ${MAX_WAIT} seconds."
		exit 5
	fi
	sleep 1s;
done

#sleep 5s

# KIBANA_VERSION in /etc/nsm/securityonion.conf may not actually reflect the current Kibana version
# Two possible cases:
# 1. In the case of a new installation, KIBANA_VERSION is explicitly set to "UNKNOWN"
# 2. In the case of a recent Kibana image upgrade, KIBANA_VERSION will be set to the previous version
# Therefore, we need to get the current version from Elasticsearch
KIBANA_VERSION=$(curl -s http://$ELASTICSEARCH_HOST:$ELASTICSEARCH_PORT | jq .version.number | sed 's/"//g')

# Delete existing Kibana config
#curl -s -XDELETE http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/${KIBANA_INDEX}/config/${KIBANA_VERSION}
#curl -s -XDELETE http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/${KIBANA_INDEX}

# Apply Kibana template
curl -XPUT http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/_template/kibana -H'Content-Type: application/json' -d'{"template" : ".kibana", "settings": { "number_of_shards" : 1, "number_of_replicas" : 0 }, "mappings" : { "search": {"properties": {"hits": {"type": "integer"}, "version": {"type": "integer"}}}}}'

# Apply Kibana config
# Old method
#curl -XPUT http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/${KIBANA_INDEX}/config/${KIBANA_VERSION} -H'Content-Type: application/json' -d@$SRC/kibana/config.json; echo; echo
# New method
curl -XPUT -H "Content-Type: application/json" -H "kbn-xsrf: $KIBANA_VERSION" http://localhost:5601/api/saved_objects/config/$KIBANA_VERSION -d@$SRC/kibana/config.json

# Apply cross cluster search seed info for local Elasticsearch instance
HOSTNAME=$(hostname)
curl -XPUT http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}/_cluster/settings -H'Content-Type: application/json' -d "{\"persistent\": {\"search\": {\"remote\": {\"$HOSTNAME\": {\"seeds\": [\"127.0.0.1:9300\"]}}}}}"

# Finally, update KIBANA_VERSION in securityonion.conf to reflect the current Kibana version
sed -i "s/KIBANA_VERSION=.*/KIBANA_VERSION=$KIBANA_VERSION/" /etc/nsm/securityonion.conf
