#!/bin/bash

. /usr/sbin/so-elastic-common

. /usr/sbin/so-replay

. /usr/sbin/so-elastic-download

header "Processing final ELSA buffers"
sh /opt/elsa/contrib/securityonion/contrib/securityonion-elsa-cron.sh
sh /opt/elsa/contrib/securityonion/contrib/securityonion-elsa-cron.sh

header "Migrating ELSA log_size_limit value"
SOCONF="/etc/nsm/securityonion.conf"
LOG_SIZE_LIMIT=$(grep 'log_size_limit' /etc/elsa_node.conf | cut -d: -f2 | sed 's/ //' | sed 's/,//')
LOG_SIZE_LIMIT_GB=$(($LOG_SIZE_LIMIT/1000000000))
if ! grep -q LOG_SIZE_LIMIT $SOCONF; then
	cat << EOF >> $SOCONF

# Log size limit (GB) for Elasticsearch logs
LOG_SIZE_LIMIT=$LOG_SIZE_LIMIT_GB
EOF
else
	sed "s/LOG_SIZE_LIMIT=.*/LOG_SIZE_LIMIT=$LOG_SIZE_LIMIT_GB/" $SOCONF
fi
echo "Done!"

. /usr/sbin/so-elastic-configure

SECONDS=60
header "Waiting $SECONDS seconds to allow Logstash to initialize"
for i in `seq 1 $SECONDS`; do
        sleep 1s
        echo -n "."
done
echo

header "Running experimental ELSA migration script"
/usr/sbin/so-migrate-elsa-data-to-elastic -y

. /usr/sbin/so-test

. /usr/sbin/so-elastic-final-text
